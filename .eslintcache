[{"C:\\Users\\aniadhikari\\Documents\\GitHub\\react-complete-guide\\src\\index.js":"1","C:\\Users\\aniadhikari\\Documents\\GitHub\\react-complete-guide\\src\\registerServiceWorker.js":"2","C:\\Users\\aniadhikari\\Documents\\GitHub\\react-complete-guide\\src\\containers\\App.js":"3","C:\\Users\\aniadhikari\\Documents\\GitHub\\react-complete-guide\\src\\hoc\\withClass.js":"4","C:\\Users\\aniadhikari\\Documents\\GitHub\\react-complete-guide\\src\\hoc\\Auxiliary.js":"5","C:\\Users\\aniadhikari\\Documents\\GitHub\\react-complete-guide\\src\\context\\auth-context.js":"6","C:\\Users\\aniadhikari\\Documents\\GitHub\\react-complete-guide\\src\\components\\Cockpit\\Cockpit.js":"7","C:\\Users\\aniadhikari\\Documents\\GitHub\\react-complete-guide\\src\\components\\Persons\\Persons.js":"8","C:\\Users\\aniadhikari\\Documents\\GitHub\\react-complete-guide\\src\\components\\Persons\\Person\\Person.js":"9"},{"size":318,"mtime":1610307599793,"results":"10","hashOfConfig":"11"},{"size":4501,"mtime":1610269841256,"results":"12","hashOfConfig":"11"},{"size":4519,"mtime":1610269841243,"results":"13","hashOfConfig":"11"},{"size":524,"mtime":1610269841252,"results":"14","hashOfConfig":"11"},{"size":315,"mtime":1610269841250,"results":"15","hashOfConfig":"11"},{"size":197,"mtime":1610269841248,"results":"16","hashOfConfig":"11"},{"size":2191,"mtime":1610269841233,"results":"17","hashOfConfig":"11"},{"size":1899,"mtime":1610269841241,"results":"18","hashOfConfig":"11"},{"size":2306,"mtime":1610305424535,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},"7v7lhj",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"23"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},"C:\\Users\\aniadhikari\\Documents\\GitHub\\react-complete-guide\\src\\index.js",["42"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport classes from './index.module.css';\r\nimport App from './containers/App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App appTitle=\"Person Manager\"/>, document.getElementById('root'));\r\nregisterServiceWorker();\r\n",["43","44"],"C:\\Users\\aniadhikari\\Documents\\GitHub\\react-complete-guide\\src\\registerServiceWorker.js",[],"C:\\Users\\aniadhikari\\Documents\\GitHub\\react-complete-guide\\src\\containers\\App.js",["45"],"import React, { Component, PureComponent } from 'react';\r\nimport classes from './App.module.css';\r\nimport Persons from '../components/Persons/Persons';\r\nimport Cockpit from '../components/Cockpit/Cockpit';\r\nimport withClass from '../hoc/withClass';\r\nimport Auxiliary from '../hoc/Auxiliary';\r\nimport AuthContext from '../context/auth-context';\r\n\r\nclass App extends PureComponent {\r\n\t// PureComponent will check and updates DOM if any state/props changes i.e. NO shouldComponentUpdate is need to implemented\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tconsole.log('[App.js] constructor');\r\n\r\n\t\t// this.state = {\r\n\t\t//   persons: [\r\n\t\t//     { id:'qwq', name: 'Leo1', age: 1, hobby: 'Running' },\r\n\t\t//     { id:'ss', name: 'Leo2', age: 2, hobby: 'Chasing birds' },\r\n\t\t//     { id:'ewe', name: 'Leo3', age: 3, hobby: 'Being cute' }\r\n\t\t//   ],\r\n\t\t//   otherStates: 'Some other value',\r\n\t\t//   showPersons: false\r\n\t\t// }\r\n\t}\r\n\r\n\t// Also bleow state can be set in constructor\r\n\tstate = {\r\n\t\tpersons: [\r\n\t\t\t{ id: 'qwq', name: 'Leo1', age: 1, hobby: 'Running' },\r\n\t\t\t{ id: 'ss', name: 'Leo2', age: 2, hobby: 'Chasing birds' },\r\n\t\t\t{ id: 'ewe', name: 'Leo3', age: 3, hobby: 'Being cute' }\r\n\t\t],\r\n\t\totherStates: 'Some other value',\r\n\t\tshowPersons: false,\r\n\t\tremoveCockpit: true,\r\n\t\tchangeCounter: 0,\r\n\t\tauthenticated: false\r\n\t}\r\n\r\n\tstatic getDerivedStateFromProps(props, state) {\r\n\t\tconsole.log('[App.js] getDerivedStateFromProps', props, state);\r\n\t\treturn state;\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconsole.log('[App.js] componentDidMount');\r\n\t}\r\n\r\n\t// Do not add this check if your component needs to update all the more often\r\n\t// shouldComponentUpdate(nextProps, nextState) {\r\n\t// \tconsole.log('[App.js] shouldComponentUpdate');\r\n\t// \treturn (\r\n\t// \t\tnextProps.persons != this.state.persons ||\r\n\t// \t\tnextProps.changed != this.state.changed ||\r\n\t// \t\tnextProps.clicked != this.state.clicked\r\n\t// \t); // \"true\" continues to update but \"false\" not\r\n\t// }\r\n\r\n\tcomponentDidUpdate(prevProps, prevState, snapshot) {\r\n\t\tconsole.log('[App.js] componentDidUpdate');\r\n\t\tconsole.log(snapshot);\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tconsole.log('[App.js] componentWillUnmount');\r\n\t}\r\n\r\n\tswitchNameHandler = (newName) => {\r\n\t\tthis.setState({\r\n\t\t\tpersons: [\r\n\t\t\t\t{ name: newName, age: 1, hobby: 'Running' },\r\n\t\t\t\t{ name: 'Leo2', age: 2, hobby: 'Chasing birds' },\r\n\t\t\t\t{ name: 'Leo3', age: 31, hobby: 'Being cute' }\r\n\t\t\t]\r\n\t\t})\r\n\t}\r\n\r\n\tnameChangeHandler = (event, id) => {\r\n\t\tconst personIndex = this.state.persons.findIndex(p => {\r\n\t\t\treturn p.id === id;\r\n\t\t});\r\n\r\n\t\t// const person = Object.assign({}, this.state.persons[personIndex]); // OR\r\n\t\tconst person = {\r\n\t\t\t...this.state.persons[personIndex]\r\n\t\t};\r\n\t\tperson.name = event.target.value;\r\n\r\n\t\tconst persons = [...this.state.persons]\r\n\t\tpersons[personIndex] = person;\r\n\r\n\t\t// Better way of updating state\r\n\t\tthis.setState((prevState, props) => {\r\n\t\t\treturn {\r\n\t\t\t\tpersons: persons,\r\n\t\t\t\tchangeCounter: prevState.changeCounter + 1 // It always increase the count\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tdeletePersonHandler = (personIndex) => {\r\n\t\t// const persons = this.state.persons.slice(); // OR\r\n\t\tconst persons = [...this.state.persons];\r\n\t\tpersons.splice(personIndex, 1);\r\n\t\tthis.setState({ persons: persons });\r\n\t}\r\n\r\n\ttogglePersonHandler = () => {\r\n\t\tconst doesShow = this.state.showPersons\r\n\t\tthis.setState({ showPersons: !doesShow })\r\n\t}\r\n\r\n\tloginHandler = () => {\r\n\t\tthis.setState({ authenticated: true })\r\n\t}\r\n\r\n\trender() {\r\n\t\tconsole.log('[App.js] render');\r\n\r\n\t\t// Prefered way of redering conditionally\r\n\t\tlet personsJsx = null;\r\n\t\tif (this.state.showPersons) {\r\n\t\t\tpersonsJsx = <Persons\r\n\t\t\t\tpersons={this.state.persons}\r\n\t\t\t\tclicked={this.deletePersonHandler}\r\n\t\t\t\tchanged={this.nameChangeHandler}\r\n\t\t\t/>;\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t// <WithClass classes={classes.App}> // Using approach ONE in WithClass.js\r\n\t\t\t<Auxiliary>\r\n\t\t\t\t<button onClick={() => this.setState({ removeCockpit: !this.state.removeCockpit })}>Remove Cockpit</button>\r\n\t\t\t\t<AuthContext.Provider value={{ authenticated: this.state.authenticated, login: this.loginHandler }}>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.state.removeCockpit ?\r\n\t\t\t\t\t\t\t<Cockpit\r\n\t\t\t\t\t\t\t\ttitle={this.props.appTitle}\r\n\t\t\t\t\t\t\t\tclicked={this.togglePersonHandler}\r\n\t\t\t\t\t\t\t\tshowPersons={this.state.showPersons}\r\n\t\t\t\t\t\t\t\tpersonsLength={this.state.persons.length}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{personsJsx}\r\n\t\t\t\t</AuthContext.Provider>\r\n\r\n\t\t\t</Auxiliary>\r\n\t\t\t// </WithClass>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withClass(App, classes.App); // Using approach TWO in withClass.js","C:\\Users\\aniadhikari\\Documents\\GitHub\\react-complete-guide\\src\\hoc\\withClass.js",[],"C:\\Users\\aniadhikari\\Documents\\GitHub\\react-complete-guide\\src\\hoc\\Auxiliary.js",[],"C:\\Users\\aniadhikari\\Documents\\GitHub\\react-complete-guide\\src\\context\\auth-context.js",[],"C:\\Users\\aniadhikari\\Documents\\GitHub\\react-complete-guide\\src\\components\\Cockpit\\Cockpit.js",[],"C:\\Users\\aniadhikari\\Documents\\GitHub\\react-complete-guide\\src\\components\\Persons\\Persons.js",[],"C:\\Users\\aniadhikari\\Documents\\GitHub\\react-complete-guide\\src\\components\\Persons\\Person\\Person.js",["46"],"import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withClass from '../../../hoc/withClass';\r\nimport Auxiliary from '../../../hoc/Auxiliary';\r\nimport personClasses from './Person.module.css';\r\nimport AuthContext from '../../../context/auth-context';\r\n\r\n\r\nclass Person extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.inputElementRef = React.createRef(); // Approach TWO\r\n    }\r\n\r\n    static contextType = AuthContext; // This works only Class based components \r\n\r\n    componentDidMount(){\r\n        // this.inputElemet.focus(); // Approach ONE\r\n        this.inputElementRef.current.focus(); // Approach TWO\r\n        console.log(this.context.authenticated);\r\n    }\r\n    render() {\r\n        console.log('[Person.js] rendering...');\r\n        return (\r\n            // <div className={personClasses.Person} >\r\n            // <React.Fragment>\r\n            // <Fragment>\r\n            <Auxiliary>\r\n                {/* <AuthContext.Consumer>\r\n                    { (context) => context.authenticated ? <p>Authenticated!</p> : <p>Please log input</p>}\r\n                </AuthContext.Consumer> */}\r\n                \r\n                {/* This works only Class based components */}\r\n                { this.context.authenticated ? <p>Authenticated!</p> : <p>Please log input</p> } \r\n                \r\n                <p\r\n                    onClick={this.props.click}>\r\n                    I am {this.props.name} and\r\n                I am {this.props.age} years old.\r\n                I like {this.props.hobby}\r\n                </p>\r\n\r\n                <p>\r\n                    {this.props.children}\r\n                </p>\r\n\r\n                <input type='text'\r\n                    // ref={(inputEl) => {this.inputElemet = inputEl} } // Approach ONE\r\n                    ref={ this.inputElementRef } // Approach TWO\r\n                    onChange={this.props.changed}\r\n                    value={this.props.name} />\r\n            </Auxiliary>\r\n            // </Fragment>\r\n            // </React.Fragment>\r\n            // </div>\r\n        )\r\n    }\r\n}\r\n\r\nPerson.propTypes = {\r\n    click: PropTypes.func,\r\n    name: PropTypes.string,\r\n    age: PropTypes.number,\r\n    changed: PropTypes.func\r\n}\r\n\r\nexport default withClass(Person, personClasses.Person);",{"ruleId":"47","severity":1,"message":"48","line":3,"column":8,"nodeType":"49","messageId":"50","endLine":3,"endColumn":15},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"47","severity":1,"message":"55","line":1,"column":17,"nodeType":"49","messageId":"50","endLine":1,"endColumn":26},{"ruleId":"47","severity":1,"message":"56","line":1,"column":28,"nodeType":"49","messageId":"50","endLine":1,"endColumn":36},"no-unused-vars","'classes' is defined but never used.","Identifier","unusedVar","no-native-reassign",["57"],"no-negated-in-lhs",["58"],"'Component' is defined but never used.","'Fragment' is defined but never used.","no-global-assign","no-unsafe-negation"]